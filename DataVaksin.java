/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tugasakhir;

import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;

/**
 *
 * @author putik
 */
public class DataVaksin extends javax.swing.JFrame {
    Koneksi koneksi = new Koneksi();
    
    private DefaultTableModel model;
    
    private void autonumber(){
        try{
            Connection conn = Koneksi.getKoneksi();
            Statement cs = conn.createStatement();
            String sql = "SELECT * FROM vaksin ORDER BY id_vaksin DESC";
            ResultSet query = cs.executeQuery(sql);
            
            if(query.next()){
                String NoVaksin = query.getString("id_vaksin").substring(2);
                String BR = "" + (Integer.parseInt(NoVaksin) + 1);
                String Nol = "";
                
                for (int i = BR.length(); i <= 4; i++) {
                    Nol += "0";
                }
                
                txtID.setText("DV" + Nol + BR);
            } else {
                txtID.setText("DV00001");
            }
            query.close();
        } catch(Exception e){
            System.out.println("Autonumber Error");
        }
    }
    
    public void clear(){
        txtNama.setText("");
        txtNIK.setText("");
        txtDosis.setSelectedIndex(0);
    }
    
    public void loadData(){
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        try {
            Connection conn = Koneksi.getKoneksi();
            Statement cs = conn.createStatement();
            String sql = "SELECT * FROM vaksin";
            ResultSet query = cs.executeQuery(sql);
            
            while(query.next()){
                Object[] list = new Object[4];
                
                list [0] = query.getString("id_vaksin");
                list [1] = query.getString("nik");
                list [2] = query.getString("nama");
                list [3] = query.getString("dosis");
                
                model.addRow(list);
            }
            query.close();
        } catch (Exception e) {
            System.out.println("Query Error !!");
        }
    }
    
    /**
     * Creates new form DataVaksin
     */
    public DataVaksin() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        
        txtID.setEnabled(false);
        
        model = new DefaultTableModel();
        
        listTable.setModel(model);
        
        model.addColumn("ID Vaksin");
        model.addColumn("NIK");
        model.addColumn("Nama");
        model.addColumn("Dosis");
        
        loadData();
        autonumber();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtNIK = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        txtDosis = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtCari = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listTable = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel1.setText("DATA VAKSIN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(178, 178, 178))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setText("ID VAKSIN");

        jLabel3.setText("NIK");

        jLabel4.setText("Nama");

        jLabel5.setText("Dosis");

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        txtDosis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dosis 1", "Dosis 2" }));
        txtDosis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDosisKeyTyped(evt);
            }
        });

        jLabel6.setText("Cari Data");

        txtCari.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtCariInputMethodTextChanged(evt);
            }
        });
        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });
        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCariKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCariKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCariKeyTyped(evt);
            }
        });

        listTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        listTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listTable);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNIK)
                                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(38, 38, 38)
                                .addComponent(txtDosis, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNIK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNama)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete)
                    .addComponent(btnCancel))
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>                        

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        String id = txtID.getText();
        String nik = txtNIK.getText();
        String nama = txtNama.getText();
        String dosis = (String)txtDosis.getSelectedItem();
        
        try {
            Connection conn = Koneksi.getKoneksi();
            String sql = "INSERT INTO vaksin VALUES (?, ?, ?, ?)";
            PreparedStatement isi = conn.prepareStatement(sql);
            
            isi.setString(1, id);
            isi.setString(2, nik);
            isi.setString(3, nama);
            isi.setString(4, dosis);
            
            isi.executeUpdate();
            isi.close();
            JOptionPane.showMessageDialog(null, "Data Berhasil Tersimpan");
        } catch (Exception e) {
            System.out.println("Tambah Data Gagal ...");
        }finally{
            loadData();
            autonumber();
            clear();
        }
    }                                       

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        int list = listTable.getSelectedRow();
        
        if(list == -1){
            return;
        }
        
        String id = (String)model.getValueAt(list, 0);
        String nik = txtNIK.getText();
        String nama = txtNama.getText();
        String dosis = (String)txtDosis.getSelectedItem();
        
        try {
            
            Connection conn = Koneksi.getKoneksi();
            String sql = "UPDATE vaksin SET nik = ?, nama = ?, dosis = ? WHERE id_vaksin = ?";
            PreparedStatement isi = conn.prepareStatement(sql);
            
            isi.setString(1, nik);
            isi.setString(2, nama);
            isi.setString(3, dosis);
            isi.setString(4, id);
            
            isi.executeUpdate();
            isi.close();
            
            JOptionPane.showMessageDialog(null, "Data Berhasil Terubah");
            btnSave.setEnabled(true);
            clear();
        } catch (Exception e) {
            System.out.println("Edit Data Gagal ...");
        } finally {
            loadData();
            autonumber();
        }
    }                                       

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        int list = listTable.getSelectedRow();
        
        if(list == -1){
            return;
        }
        
        String id = (String)model.getValueAt(list, 0);
        int question = JOptionPane.showConfirmDialog(null, "Yakin Data akan Dihapus?", 
                "Konfirmasi", JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(question == JOptionPane.OK_OPTION){
            try {
                Connection conn = Koneksi.getKoneksi();
                String sql = "DELETE FROM vaksin WHERE id_vaksin = ?";
                PreparedStatement isi = conn.prepareStatement(sql);

                isi.setString(1, id);

                isi.executeUpdate();
                isi.close();

                JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");
                btnSave.setEnabled(true);
                clear();
            } catch (Exception e) {
                System.out.println("Edit Data Gagal ...");
            } finally {
                loadData();
                autonumber();
                clear();
            }
        }
        if(question == JOptionPane.CANCEL_OPTION){
            
        }
    }                                         

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        clear();
        loadData();
        btnSave.setEnabled(true);
        autonumber();
    }                                         

    private void txtCariKeyPressed(java.awt.event.KeyEvent evt) {                                   
        // TODO add your handling code here:
    }                                  

    private void txtDosisKeyTyped(java.awt.event.KeyEvent evt) {                                  
        // TODO add your handling code here:
    }                                 

    private void txtCariKeyTyped(java.awt.event.KeyEvent evt) {                                 
        // TODO add your handling code here:
        DefaultTableModel table = new DefaultTableModel();
        
        table.addColumn("ID Vaksin");
        table.addColumn("NIK");
        table.addColumn("Nama");
        table.addColumn("Dosis");
        
        try {
            Connection conn = Koneksi.getKoneksi();
            Statement cs = conn.createStatement();
            String sql = "SELECT * FROM vaksin WHERE id_vaksin LIKE '%"+ txtCari.getText() +"%' OR "
                    + "nik LIKE '%"+ txtCari.getText() +"%' OR "
                    + "nama LIKE '%"+ txtCari.getText() +"%'";
            ResultSet query = cs.executeQuery(sql);
            
            while(query.next()){
                table.addRow(new Object[]{
                    query.getString("id_vaksin"),
                    query.getString("nik"),
                    query.getString("nama"),
                    query.getString("dosis"),
                }); 
            }
            listTable.setModel(table);
            loadData();
        } catch (Exception e) {
            System.err.println("Data Tidak Ditemukan");
        } finally {
        }
    }                                

    private void txtCariInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void txtCariKeyReleased(java.awt.event.KeyEvent evt) {                                    
        // TODO add your handling code here:
    }                                   

    private void listTableMouseClicked(java.awt.event.MouseEvent evt) {                                       
        // TODO add your handling code here:
        
        btnSave.setEnabled(false);
        int list = listTable.getSelectedRow();
        if (list == -1){
            return;
        }
        
        String id = (String)model.getValueAt(list, 0);
        txtID.setText(id);
        String nik = (String)model.getValueAt(list, 1);
        txtNIK.setText(nik);
        String nama = (String)model.getValueAt(list, 2);
        txtNama.setText(nama);
        String dosis = (String)model.getValueAt(list, 3);
        txtDosis.setSelectedItem(dosis);
    }                                      

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataVaksin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataVaksin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataVaksin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataVaksin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataVaksin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listTable;
    private javax.swing.JTextField txtCari;
    private javax.swing.JComboBox<String> txtDosis;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNIK;
    private javax.swing.JTextField txtNama;
    // End of variables declaration                   
}
